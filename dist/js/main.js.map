{"version":3,"sources":["main.js"],"names":["console","log","slideshow","currentSlide","$slides","document","querySelectorAll","nextSlide","oldSlide","length","tl","TimelineMax","oldSlideImage","querySelector","to","opacity","x","stamp","scale","$foods","tl_foodFight","staggerTo","y","ease","Elastic","easeOut","fromTo","rotation","currentSlideImage","$rocket","$astro","tl_rocketFly","yoyo","TimelineLite","staggerFrom","setInterval","changeDoodles","$doodlesContainer","currentDoodle","$doodles","newDoodle","style","backgroundImage","$stamp"],"mappings":"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","sourcesContent":["console.log(`Hello Chello! slideshow.`);\n\n\nlet slideshow = function(){\n\n\n    console.log('starting slideshow')\n    let currentSlide = -1;\n\n    //use ALL to grab all elements with that class name\n    let $slides = document.querySelectorAll('.slide');\n\n    let nextSlide = function(){\n        \n\n        // save the number of what used to be currentSlide as oldSlide\n        let oldSlide = currentSlide \n\n        // and then change currentSlide to the next number\n        currentSlide ++\n        \n        //if slide reaches the end of its length\n        if (currentSlide >= $slides.length){\n            //start the slide at the first img\n            currentSlide = 0\n        }\n        console.log('showing image: ', currentSlide);\n\n\n        let tl = new TimelineMax()\n\n      \n\n        if (oldSlide >= 0) {\n            // $slides[oldSlide].style.display = 'none';\n            // go into the .slide with index of oldSlide,\n            // and find it's img.picture child element\n            let oldSlideImage = $slides[oldSlide].querySelector('.picture')\n            // exit animation - fade out, and move right by 100 px\n            tl.to(oldSlideImage, 0.3, {opacity: 0, x: -100})\n\n            if (oldSlide === 0 ) {\n                // here are the exit animations specifically for when slide 0 is leaving\n                let stamp = $slides[oldSlide].querySelector('.stamp')\n                tl.to(stamp, 0.5, {opacity: 0, x: 0}, \"-=0.25\")\n                \n            \n\n\n            } else if (oldSlide === 1 ) {\n                // here are the exit animations specifically for when slide 1 is leaving\n                let stamp = $slides[oldSlide].querySelector('.stamp')\n                tl.to(stamp, 0.5, {opacity: 0, scale: 0}, \"-=0.25\")\n            } else if (oldSlide === 2 ) {\n                // here are the exit animations specifically for when slide 2 is leaving\n                let stamp = $slides[oldSlide].querySelector('.stamp')\n                let $foods = document.querySelectorAll('.food-stampy');\n                let tl_foodFight = new TimelineMax();\n\n                tl_foodFight\n                    .staggerTo($foods, .8, {scale:0.5, x:-100, y:50, opacity:0, ease:Elastic.easeOut})\n                    .fromTo(stamp, 1, {opacity:0,y:0, x:0, rotation:0, scale:1},{opacity:1, y:-115, x:-190, rotation:30, scale:0})\n\n            } else if (oldSlide === 3 ) {\n                // here are the exit animations specifically for when slide 3 is leaving\n            }\n\n        }\n\n        // $slides[currentSlide].style.display = 'block';\n        let currentSlideImage = $slides[currentSlide].querySelector('.picture')\n        // enter animation - fade in, and move up to 0 px (default position)\n        tl.to(currentSlideImage, 0.5, {opacity: 1,  x:100})\n\n        if (currentSlide === 0 ) {\n            // here are the enter animations specifically for when slide 0 is entering\n            let stamp = $slides[currentSlide].querySelector('.stamp')\n            let $rocket = document.querySelector('.rocket-stampy');\n            let $astro = document.querySelector('.astro1-stampy');\n            let tl_rocketFly = new TimelineMax();\n            \n            tl_rocketFly\n                .fromTo(stamp, 1, {opacity:0,y:115, x:-190, rotation:50, scale:0},{opacity:1, y:0, x:0, rotation:0, scale:1})\n                .fromTo($astro, 1, {opacity:0, y:-70, rotation:0}, {opacity:1, y:130,rotation:-5, scale:.8})\n                .fromTo($astro, 2, {rotation:-5},{ y:-15,rotation:5, yoyo:true}, \"float\")\n                .fromTo($rocket, 2.5, {opacity:0,y:-115, x:125, rotation:0},{opacity:1, y:450, x:-290, rotation:-50}, \"float+=.01\")\n                \n\n        } else if (currentSlide === 1 ) {\n                // here are the enter animations specifically for when slide 2 is entering\n                let stamp = $slides[currentSlide].querySelector('.stamp');  \n                let $foods = document.querySelectorAll('.food-stampy');\n                let tl_foodFight = new TimelineLite();\n               \n                tl_foodFight\n                    .fromTo(stamp, 1, {opacity:0,y:-115, x:190, rotation:-50, scale:0},{opacity:1, y:0, x:0, rotation:0, scale:1},\"float\")\n                    .staggerFrom($foods, .1, {scale:0.5, x:-100, y:50, opacity:0, ease:Elastic.easeOut}, 0.2);\n\n\n\n\n            } else if (currentSlide === 2 ){\n                let stamp = $slides[currentSlide].querySelector('.stamp')\n                tl.to(stamp, 0.5, {opacity: 1, x: 8})\n            } else if (currentSlide === 3 ) {\n            // here are the enter animations specifically for when slide 3 is entering\n        }\n    }\n    //call the function (load picture)\n    nextSlide()\n\n    //every 3 seconcs, call it again (change picture)\n    setInterval(nextSlide, 3000)\n};\n\n// CALL SLIDESHOW: Turn on/off\nslideshow();\n\n\n//doodles is bod background\nlet changeDoodles = function(){\n\n    let $doodlesContainer = document.querySelector('#csBody');\n\n    console.log('changing doodles')\n    let currentDoodle=-1;\n\n    //create an array of all doodles\n    let $doodles = [\n        \"url(/dist/img/thinkStamp.png)\",\n        \"url(/dist/img/spaceStamp2.png)\",\n        \"url(/dist/img/foodStamp1.png)\",\n        \"url(/dist/img/spaceSet2.png)\",\n        \"url(/dist/img/codeStamp.png)\",\n        \"url(/dist/img/foodSet2.png)\",\n    ];\n\n    let newDoodle = function(){\n        \n\n        //add the next doodle\n        currentDoodle ++\n        console.log('showing doodle: ', currentDoodle);\n    \n        //if doodle reaches the end of its length\n        if(currentDoodle >= $doodles.length){\n            //start the doodles at the first img\n            currentDoodle = 0\n        }\n\n            //if background image does not match current backround\n\n            if($doodles[currentDoodle] !== $doodlesContainer.style.backgroundImage){\n\n                // then manke backgrounds the same\n                $doodlesContainer.style.backgroundImage = $doodles[currentDoodle];\n             }\n        \n    }\n    //call the function (load picture)\n    newDoodle()\n\n    //every 3 seconcs, call it again (change picture)\n    setInterval(newDoodle, 3000)\n};\n\n\n//CALL DOODELS: Turn on/off\n// changeDoodles();\n\n\n\n\nlet $foods = document.querySelectorAll('.food-stampy');\nlet tl_foodFight = new TimelineLite();\n\nlet tl = new TimelineLite();\n\ntl_foodFight\n.fromTo($stamp, 1, {opacity:0,y:-115, x:190, rotation:-50, scale:0},{opacity:1, y:0, x:0, rotation:0, scale:1},\"float\")\n\n\ntl.staggerFrom($foods, .1, {scale:0.5, x:-100, y:50, opacity:0, ease:Elastic.easeOut}, 0.2)\n\n\n\n\n\n\n\n\n\n\n\n            \n\n\n\n\n\n\n\n// let $setsContainer = document.querySelector('#csBody');\n\n// let backChange = (function() {\n// \tlet currentSet = -1;\n    \n//     let $sets = [\n//         \"url(/dist/img/tacoSet2.png)\",\n//         \"url(/dist/img/dogSet2.png)\",\n//         \"url(/dist/img/beachSet2.png)\",\n//         \"url(/dist/img/spaceSet2.png)\",\n//         \"url(/dist/img/sketchSet2.png)\",\n//         \"url(/dist/img/foodSet2.png)\",\n//     ];\n\n//     //every 3 seconds, pick an index number\n//     // translate index into string\n//     // if string does not match current backround\n//     //make string new background\n//     //else if strings match, do nothing (code will run again)\n    \n//     let swap = function(){\n        \n//         for (let s=0; s < $sets.length; s++){ // d =0, so long as it is below 4, print and increase d by one.\n//             console.log(\"s: \" + s)\n//         }\n//     }\n\n\n// \tlet changeSets = function() {\n// \t\tcurrentSet++\n// \t\tif (currentSet >= $sets.length) {\n// \t\t\tcurrentSet = 0\n// \t\t}\n\t \n// \t\t$sets.forEach(function($set) {\n// \t\t\t$set.style.backgroundImage = 'none'\n// \t\t})\n// \t\t$setsContainer.style.backgroundImage = $sets[currentSet];\n// \t}\n\n\n\n    \n// \tchangeSets()\n// \tsetInterval(swap, 3000);\n// })();"],"file":"main.js"}