{"version":3,"sources":["main.js"],"names":["console","log","slideshow","currentSlide","$slides","document","querySelectorAll","newSlide","length","forEach","$slide","style","display","setInterval","changeDoodles","$doodlesContainer","querySelector","currentDoodle","$doodles","newDoodle","backgroundImage"],"mappings":";;AAAAA,OAAO,CAACC,GAAR;;AAGA,IAAIC,SAAS,GAAG,SAAZA,SAAY,GAAU;AAGtBF,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,MAAIE,YAAY,GAAC,CAAC,CAAlB,CAJsB,CAMtB;;AACA,MAAIC,OAAO,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,CAAd;;AAEA,MAAIC,QAAQ,GAAG,SAAXA,QAAW,GAAU;AAGrB;AACAJ,IAAAA,YAAY;AACZH,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,YAA/B,EALqB,CAOrB;;AACA,QAAGA,YAAY,IAAIC,OAAO,CAACI,MAA3B,EAAkC;AAC9B;AACAL,MAAAA,YAAY,GAAG,CAAf;AACH;;AAGDC,IAAAA,OAAO,CAACK,OAAR,CAAgB,UAASC,MAAT,EAAgB;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,MAAAA,MAAM,CAACC,KAAP,CAAaC,OAAb,GAAuB,MAAvB,CAZ4B,CAc5B;;AAEA,UAAGR,OAAO,CAACD,YAAD,CAAV,EAAyB;AACrBC,QAAAA,OAAO,CAACD,YAAD,CAAP,CAAsBQ,KAAtB,CAA4BC,OAA5B,GAAsC,OAAtC;AACH;AAEJ,KApBD;AAsBH,GApCD,CATsB,CA8CtB;;;AACAL,EAAAA,QAAQ,GA/Cc,CAiDtB;;AACAM,EAAAA,WAAW,CAACN,QAAD,EAAW,IAAX,CAAX;AACH,CAnDD,C,CAqDA;;;AACAL,SAAS;;AAIT,IAAIY,aAAa,GAAG,SAAhBA,aAAgB,GAAU;AAE1B,MAAIC,iBAAiB,GAAGV,QAAQ,CAACW,aAAT,CAAuB,SAAvB,CAAxB;AAEAhB,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,MAAIgB,aAAa,GAAC,CAAC,CAAnB,CAL0B,CAO1B;;AACA,MAAIC,QAAQ,GAAG,CACX,6BADW,EAEX,4BAFW,EAGX,8BAHW,EAIX,8BAJW,EAKX,+BALW,EAMX,6BANW,CAAf;;AASA,MAAIC,SAAS,GAAG,SAAZA,SAAY,GAAU;AAGtB;AACAF,IAAAA,aAAa;AACbjB,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCgB,aAAhC,EALsB,CAOtB;;AACA,QAAGA,aAAa,IAAIC,QAAQ,CAACV,MAA7B,EAAoC;AAChC;AACAS,MAAAA,aAAa,GAAG,CAAhB;AACH,KAXqB,CAgBlB;;;AAEA,QAAGC,QAAQ,CAACD,aAAD,CAAR,KAA4BF,iBAAiB,CAACJ,KAAlB,CAAwBS,eAAvD,EAAuE;AAEnE;AACAL,MAAAA,iBAAiB,CAACJ,KAAlB,CAAwBS,eAAxB,GAA0CF,QAAQ,CAACD,aAAD,CAAlD;AACF;AAET,GAxBD,CAjB0B,CA0C1B;;;AACAE,EAAAA,SAAS,GA3CiB,CA6C1B;;AACAN,EAAAA,WAAW,CAACM,SAAD,EAAY,IAAZ,CAAX;AACH,CA/CD,C,CAkDA;;;AACAL,aAAa,G,CAKb;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA","sourcesContent":["console.log(`Hello Chello! slideshow.`);\n\n\nlet slideshow = function(){\n\n\n    console.log('starting slideshow')\n    let currentSlide=-1;\n\n    //use ALL to grab all elements with that class name\n    let $slides = document.querySelectorAll('.slide');\n\n    let newSlide = function(){\n        \n\n        //add the next slide\n        currentSlide ++\n        console.log('showing image: ', currentSlide);\n    \n        //if slide reaches the end of its length\n        if(currentSlide >= $slides.length){\n            //start the slide at the first img\n            currentSlide = 0\n        }\n\n\n        $slides.forEach(function($slide){\n\n            // //if $slide is currently showing\n            // if($slides === currentSlide){\n            //     //add the showing class, which has display block\n            //     $slides[currentSlide].className += \"showing\";\n            //     console.log(\"class added\");\n            // } else {\n            //     $slides.className -= \"showing\";\n            // }\n            //turn off display on all slides\n\n            $slide.style.display = 'none';\n\n            //and if current slide is true, turn display on\n\n            if($slides[currentSlide]){\n                $slides[currentSlide].style.display = 'block';\n            }\n\n        })\n        \n    }\n    //call the function (load picture)\n    newSlide()\n\n    //every 3 seconcs, call it again (change picture)\n    setInterval(newSlide, 3000)\n};\n\n//CALL SLIDESHOW: Turn on/off\nslideshow();\n\n\n\nlet changeDoodles = function(){\n\n    let $doodlesContainer = document.querySelector('#csBody');\n\n    console.log('changing doodles')\n    let currentDoodle=-1;\n\n    //create an array of all doodles\n    let $doodles = [\n        \"url(/dist/img/tacoSet2.png)\",\n        \"url(/dist/img/dogSet2.png)\",\n        \"url(/dist/img/beachSet2.png)\",\n        \"url(/dist/img/spaceSet2.png)\",\n        \"url(/dist/img/doodleSet2.png)\",\n        \"url(/dist/img/foodSet2.png)\",\n    ];\n\n    let newDoodle = function(){\n        \n\n        //add the next doodle\n        currentDoodle ++\n        console.log('showing doodle: ', currentDoodle);\n    \n        //if doodle reaches the end of its length\n        if(currentDoodle >= $doodles.length){\n            //start the doodles at the first img\n            currentDoodle = 0\n        }\n\n\n        \n\n            //if background image does not match current backround\n\n            if($doodles[currentDoodle] !== $doodlesContainer.style.backgroundImage){\n\n                // then manke backgrounds the same\n                $doodlesContainer.style.backgroundImage = $doodles[currentDoodle];\n             }\n        \n    }\n    //call the function (load picture)\n    newDoodle()\n\n    //every 3 seconcs, call it again (change picture)\n    setInterval(newDoodle, 3000)\n};\n\n\n//CALL DOODELS: Turn on/off\nchangeDoodles();\n\n\n\n\n// let $setsContainer = document.querySelector('#csBody');\n\n// let backChange = (function() {\n// \tlet currentSet = -1;\n    \n//     let $sets = [\n//         \"url(/dist/img/tacoSet2.png)\",\n//         \"url(/dist/img/dogSet2.png)\",\n//         \"url(/dist/img/beachSet2.png)\",\n//         \"url(/dist/img/spaceSet2.png)\",\n//         \"url(/dist/img/sketchSet2.png)\",\n//         \"url(/dist/img/foodSet2.png)\",\n//     ];\n\n//     //every 3 seconds, pick an index number\n//     // translate index into string\n//     // if string does not match current backround\n//     //make string new background\n//     //else if strings match, do nothing (code will run again)\n    \n//     let swap = function(){\n        \n//         for (let s=0; s < $sets.length; s++){ // d =0, so long as it is below 4, print and increase d by one.\n//             console.log(\"s: \" + s)\n//         }\n//     }\n\n\n// \t// let changeSets = function() {\n// \t// \tcurrentSet++\n// \t// \tif (currentSet >= $sets.length) {\n// \t// \t\tcurrentSet = 0\n// \t// \t}\n\t \n// \t// \t$sets.forEach(function($set) {\n// \t// \t\t$set.style.backgroundImage = 'none'\n// \t// \t})\n// \t// \t$setsContainer.style.backgroundImage = $sets[currentSet];\n// \t// }\n\n\n\n    \n// \t// changeSets()\n// \tsetInterval(swap, 3000);\n// })();"],"file":"main.js"}