{"version":3,"sources":["main.js"],"names":["console","log","slideshow","currentSlide","$slides","document","querySelectorAll","nextSlide","oldSlide","length","tl","TimelineMax","oldSlideImage","querySelector","to","opacity","y","stamp","x","currentSlideImage","setInterval","changeDoodles","$doodlesContainer","currentDoodle","$doodles","newDoodle","style","backgroundImage"],"mappings":"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","sourcesContent":["console.log(`Hello Chello! slideshow.`);\n\n\nlet slideshow = function(){\n\n\n    console.log('starting slideshow')\n    let currentSlide = -1;\n\n    //use ALL to grab all elements with that class name\n    let $slides = document.querySelectorAll('.slide');\n\n    let nextSlide = function(){\n        \n\n        // save the number of what used to be currentSlide as oldSlide\n        let oldSlide = currentSlide \n\n        // and then change currentSlide to the next number\n        currentSlide ++\n        \n        //if slide reaches the end of its length\n        if (currentSlide >= $slides.length){\n            //start the slide at the first img\n            currentSlide = 0\n        }\n        console.log('showing image: ', currentSlide);\n\n\n        let tl = new TimelineMax()\n\n        if (oldSlide >= 0) {\n            // $slides[oldSlide].style.display = 'none';\n            // go into the .slide with index of oldSlide,\n            // and find it's img.picture child element\n            let oldSlideImage = $slides[oldSlide].querySelector('.picture')\n            // exit animation - fade out, and move down by 100 px\n            tl.to(oldSlideImage, 0.3, {opacity: 0, y: 100})\n\n            if (oldSlide === 0 ) {\n                // here are the exit animations specifically for when slide 0 is leaving\n                let stamp = $slides[oldSlide].querySelector('.stamp')\n                tl.to(stamp, 0.5, {opacity: 0, x: 0}, \"-=0.25\")\n\n            } else if (oldSlide === 1 ) {\n                // here are the exit animations specifically for when slide 1 is leaving\n            } else if (oldSlide === 2 ) {\n                // here are the exit animations specifically for when slide 2 is leaving\n            } else if (oldSlide === 3 ) {\n                // here are the exit animations specifically for when slide 3 is leaving\n            }\n\n        }\n\n        // $slides[currentSlide].style.display = 'block';\n        let currentSlideImage = $slides[currentSlide].querySelector('.picture')\n        // enter animation - fade in, and move up to 0 px (default position)\n        tl.to(currentSlideImage, 0.5, {opacity: 1,  y: 0})\n\n        if (currentSlide === 0 ) {\n            // here are the enter animations specifically for when slide 0 is entering\n            let stamp = $slides[currentSlide].querySelector('.stamp')\n            tl.to(stamp, 0.5, {opacity: 1, x: 100})\n        } else if (currentSlide === 1 ) {\n            // here are the enter animations specifically for when slide 1 is entering\n        } else if (currentSlide === 2 ) {\n            // here are the enter animations specifically for when slide 2 is entering\n        } else if (currentSlide === 3 ) {\n            // here are the enter animations specifically for when slide 3 is entering\n        }\n    }\n    //call the function (load picture)\n    nextSlide()\n\n    //every 3 seconcs, call it again (change picture)\n    setInterval(nextSlide, 3000)\n};\n\n//CALL SLIDESHOW: Turn on/off\nslideshow();\n\n\n\nlet changeDoodles = function(){\n\n    let $doodlesContainer = document.querySelector('#csBody');\n\n    console.log('changing doodles')\n    let currentDoodle=-1;\n\n    //create an array of all doodles\n    let $doodles = [\n        \"url(/dist/img/tacoSet2.png)\",\n        \"url(/dist/img/dogSet2.png)\",\n        \"url(/dist/img/beachSet2.png)\",\n        \"url(/dist/img/spaceSet2.png)\",\n        \"url(/dist/img/doodleSet2.png)\",\n        \"url(/dist/img/foodSet2.png)\",\n    ];\n\n    let newDoodle = function(){\n        \n\n        //add the next doodle\n        currentDoodle ++\n        console.log('showing doodle: ', currentDoodle);\n    \n        //if doodle reaches the end of its length\n        if(currentDoodle >= $doodles.length){\n            //start the doodles at the first img\n            currentDoodle = 0\n        }\n\n            //if background image does not match current backround\n\n            if($doodles[currentDoodle] !== $doodlesContainer.style.backgroundImage){\n\n                // then manke backgrounds the same\n                $doodlesContainer.style.backgroundImage = $doodles[currentDoodle];\n             }\n        \n    }\n    //call the function (load picture)\n    newDoodle()\n\n    //every 3 seconcs, call it again (change picture)\n    setInterval(newDoodle, 3000)\n};\n\n\n//CALL DOODELS: Turn on/off\n// changeDoodles();\n\n\n\n\n// let $setsContainer = document.querySelector('#csBody');\n\n// let backChange = (function() {\n// \tlet currentSet = -1;\n    \n//     let $sets = [\n//         \"url(/dist/img/tacoSet2.png)\",\n//         \"url(/dist/img/dogSet2.png)\",\n//         \"url(/dist/img/beachSet2.png)\",\n//         \"url(/dist/img/spaceSet2.png)\",\n//         \"url(/dist/img/sketchSet2.png)\",\n//         \"url(/dist/img/foodSet2.png)\",\n//     ];\n\n//     //every 3 seconds, pick an index number\n//     // translate index into string\n//     // if string does not match current backround\n//     //make string new background\n//     //else if strings match, do nothing (code will run again)\n    \n//     let swap = function(){\n        \n//         for (let s=0; s < $sets.length; s++){ // d =0, so long as it is below 4, print and increase d by one.\n//             console.log(\"s: \" + s)\n//         }\n//     }\n\n\n// \t// let changeSets = function() {\n// \t// \tcurrentSet++\n// \t// \tif (currentSet >= $sets.length) {\n// \t// \t\tcurrentSet = 0\n// \t// \t}\n\t \n// \t// \t$sets.forEach(function($set) {\n// \t// \t\t$set.style.backgroundImage = 'none'\n// \t// \t})\n// \t// \t$setsContainer.style.backgroundImage = $sets[currentSet];\n// \t// }\n\n\n\n    \n// \t// changeSets()\n// \tsetInterval(swap, 3000);\n// })();"],"file":"main.js"}